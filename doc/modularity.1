.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "MODULARITY" "1" "September 2017" "www.complex-networks.net" "www.complex-networks.net"
.
.SH "NAME"
\fBmodularity\fR \- Compute the modularity of a partition of a graph
.
.SH "SYNOPSIS"
\fBmodularity\fR \fIgraph_in\fR \fIpartition\fR
.
.SH "DESCRIPTION"
\fBmodularity\fR computes the value of the modularity function associated to a partition of the nodes of the graph given as input\.
.
.SH "PARAMETERS"
.
.TP
\fIgraph_in\fR
undirected input graph (edge list)\. If is equal to \fB\-\fR (dash), read the edge list from STDIN\.
.
.TP
\fIpartition\fR
The name of the file containing the association of nodes to communities (the partition of which one wants to compute the modularity)\. See \fIINPUT FORMAT\fR for details\.
.
.SH "INPUT FORMAT"
\fIgraph_in\fR is an edge\-list\. The file \fIpartition\fR is in the format:
.
.IP "" 4
.
.nf

    node_0 community_0
    node_1 community_1
    \.\.\.\.
.
.fi
.
.IP "" 0
.
.P
where \'node_0\' is the label of the first node and \'community_0\' is the community to which \'node_0\' belongs, and so on\.
.
.SH "OUTPUT"
\fBmodularity\fR prints on STDOUT the value of the modularity function associated to the partition of the graph provided as input\. The program also prints on STDERR one line in the format:
.
.IP "" 4
.
.nf

    ## nc: NUM_COMMUNITIES
.
.fi
.
.IP "" 0
.
.P
where \'NUM_COMMUNITIES\' is the number of communities in the partition provided as input\.
.
.SH "REFERENCES"
.
.IP "\(bu" 4
M\. E\. J\. Newman and M\. Girvan\. "Finding and evaluating community structure in networks"\. Phys\. Rev\. E 69, (2004), 026113\.
.
.IP "\(bu" 4
V\. Latora, V\. Nicosia, G\. Russo, "Complex Networks: Principles, Methods and Applications", Chapter 9, Cambridge University Press (2017)
.
.IP "" 0
.
.SH "AUTHORS"
(c) Vincenzo \'KatolaZ\' Nicosia 2009\-2017 \fB<v\.nicosia@qmul\.ac\.uk>\fR\.
