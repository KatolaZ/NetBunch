.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "SHORTEST_AVG_MAX_HIST" "1" "September 2017" "www.complex-networks.net" "www.complex-networks.net"
.
.SH "NAME"
\fBshortest_avg_max_hist\fR \- Compute the distance between one node and all the other nodes of a graph
.
.SH "SYNOPSIS"
\fBshortest_avg_max_hist\fR \fIgraph_in\fR \fInode\fR
.
.SH "DESCRIPTION"
\fBshortest_avg_max_hist\fR computes the distance (and the shortest paths) between a given node and all the other nodes of an undirected graph provided as input\. The program implements the Breadth\-First Search algorithm, and works almost exactly as [shortest(1)][], except for the output\.
.
.SH "PARAMETERS"
.
.TP
\fIgraph_in\fR
input graph (edge list) if equal to \fB\-\fR (dash), read the edge list from STDIN\.
.
.TP
\fInode\fR
The label of the node from which distances are to be computed
.
.SH "OUTPUT"
The output
.
.SH "EXAMPLES"
The following command:
.
.IP "" 4
.
.nf

      $ shortest_avg_max_hist er_1000_5000\.net 25
      3\.2002 4 11 111 544 333
      $
.
.fi
.
.IP "" 0
.
.P
is showing the average distance between node \fB25\fR and all the other nodes in the graph (\fB3\.2002\fR), the eccentricity of node \fB25\fR (equal to \fB4\fR), and the number of nodes at distance \fB1\fR (11), \fB2\fR (111), \fB3\fR (544) and \fB4\fR (333) from node \fB25\fR\.
.
.SH "SEE ALSO"
shortest(1), betweenness(1), bet_dependency(1)
.
.SH "REFERENCES"
.
.IP "\(bu" 4
V\. Latora, V\. Nicosia, G\. Russo, "Complex Networks: Principles, Methods and Applications", Chapter 3, Cambridge University Press (2017)
.
.IP "\(bu" 4
V\. Latora, V\. Nicosia, G\. Russo, "Complex Networks: Principles, Methods and Applications", Appendix 6, Cambridge University Press (2017)
.
.IP "" 0
.
.SH "AUTHORS"
(c) Vincenzo \'KatolaZ\' Nicosia 2009\-2017 \fB<v\.nicosia@qmul\.ac\.uk>\fR\.
